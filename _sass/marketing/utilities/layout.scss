// Max width columns
.col-5-max {
  width: 100%;
  max-width: rem((5 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((5 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(sm) {
    max-width: rem((5 / 12) * ($container-xl + $spacer-3));
  }
}

.col-6-max {
  width: 100%;
  max-width: rem((6 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((6 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(lg) {
    max-width: rem((6 / 12) * ($container-xl + $spacer-3));
  }
}

.col-7-max {
  width: 100%;
  max-width: rem((7 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((7 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(lg) {
    max-width: rem((7 / 12) * ($container-xl + $spacer-3));
  }
}

.col-8-max {
  width: 100%;
  max-width: rem((8 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((8 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(lg) {
    max-width: rem((8 / 12) * ($container-xl + $spacer-3));
  }
}

.col-9-max {
  width: 100%;
  max-width: rem((9 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((9 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(lg) {
    max-width: rem((9 / 12) * ($container-xl + $spacer-5));
  }
}

.col-10-max {
  width: 100%;
  max-width: rem((10 / 12) * ($container-xl + $spacer-3));

  @include breakpoint(sm) {
    max-width: rem((10 / 12) * ($container-xl + $spacer-6));
  }

  @include breakpoint(lg) {
    max-width: rem((10 / 12) * ($container-xl + $spacer-3));
  }
}

// Gutters
// Apply padding and a negative margin to the outside of the container
@mixin gutters($gutter-width: $spacer-3) {
  margin-right: rem(-$gutter-width);
  margin-left: rem(-$gutter-width);

  > [class*="col-"] {
    padding-right: rem($gutter-width) !important;
    padding-left: rem($gutter-width) !important;
  }
}

$gutter-breakpoints: (
  sm: "sm",
  md: "md",
  lg: "lg"
) !default;

@each $breakpoint in map-keys($gutter-breakpoints) {
  @include breakpoint($breakpoint) {
    .gutter-#{$breakpoint}-0 {
      @include gutters(0);
    }
  }
}

/* primer polyfill */

// stylelint-disable-next-line primer/no-override
.top-xl-0 {
  @include breakpoint(xl) {
    top: 0 !important;
  }
}

.top-xl-3 {
  @include breakpoint(xl) {
    top: $spacer-3 !important;
  }
}

.top-xl-5 {
  @include breakpoint(xl) {
    top: $spacer-5 !important;
  }
}

.top-xl-n5 {
  @include breakpoint(xl) {
    top: -$spacer-5 !important;
  }
}

.top-xl-n10 {
  @include breakpoint(xl) {
    top: -$spacer-10 !important;
  }
}

.top-xl-n12 {
  @include breakpoint(xl) {
    top: -$spacer-12 !important;
  }
}

// stylelint-disable-next-line primer/no-override
.right-xl-0 {
  @include breakpoint(xl) {
    right: 0 !important;
  }
}

// stylelint-disable-next-line primer/no-override
.left-md-auto.left-md-auto {
  @media (min-width: $width-md) {
    left: auto !important;
  }
}

.wide-block {
  max-width: 1464px;
  // stylelint-disable-next-line primer/spacing
  padding: rem(104px) 0 0 !important;
  // stylelint-disable-next-line primer/colors
  background-color: $dark-fill-mktg;

  @media (min-width: 1464px) {
    // stylelint-disable-next-line primer/borders
    border-radius: rem(16px) !important;
  }
}

.img-responsive {
  display: block;
  width: 100%; // Firefox bs
  max-width: 100%; // Set a maximum relative to the parent
  height: auto; // Scale the height according to the width, otherwise you get stretching
}
